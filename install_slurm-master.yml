---
- hosts: slurm_node
  #hosts1:10.130.166.205
  #vars:
  #ansible_ssh_user='ansible'
  #ansible_ssh_pass='AH64_uh1'
  #ansible_connection=ssh

  vars_files:
    - ./vars.yml

  tasks:

  - name: Run the equivalent of "apt-get update" as a separate step
    apt:
      update_cache: yes
    become: yes
    become_method: sudo

  - name: Ensure required softwares are installed
    apt:
      name: "{{ pre_req_softwares }}"
      state: present
    become: yes
    become_method: sudo

  - name: install required tools
    apt:
      name: "{{ tools }}"
      state: present
    become: yes
    become_method: sudo

  - name: install fpm
    command: bash -lc "gem install fpm"
    become: yes
    become_method: sudo

  - name: enable munge service
    service:
          name: munge
          enabled: yes
    become: yes
    become_method: sudo

  - name: start munge service
    service:
          name: munge
          state: started
    ignore_errors: yes
    become: yes
    become_method: sudo

#### Install Slurmdbd

  - name: install python module pip
    apt:
      name:
        - python3
        - python3-pip
        - python3-setuptools
        - python-pymysql
        - python3-pymysql
        - python-apt
        - python3-apt
      state: latest
    become: yes
    become_method: sudo

  - name: install PyMySQL
    #pip:
    # name: pymysql
    # state: present
    command: "{{ item }}"
    with_items:
       - pip3 install pymysql
         #- pip install pymysql
    become: yes
    become_method: sudo

  - name: install required tools
    apt:
      name: mariadb-server
      state: present
    become: yes
    become_method: sudo

  - name: enable mysql service
    service:
          name: mysql
          enabled: yes
    become: yes
    become_method: sudo

  - name: start mysql service
    service:
          name: mysql
          state: started
    ignore_errors: yes
    become: yes
    become_method: sudo

  - name: wait for mysql in port 3306 to start
    wait_for: port=3306 delay=10 timeout=60

    #- name: template .my.cnf
    #template:
    #src: "my.cnf.j2"
    #dest: "/root/my.cnf"
    #owner: root
    #group: root
    #mode: 0600
    #become: yes
    #become_method: sudo
     #when: slurm_manage_mysql_security|bool


  - name: grant full privileges to root user
    shell: mysql -h localhost -u root -proot -e "{{ item }}"
    with_items:
       - "GRANT ALL ON *.* to root@localhost IDENTIFIED BY 'root'"
       - "create database slurm_acct_db"
       - "create user 'slurm'@'localhost'"
       - "set password for 'slurm'@'localhost' = password('slurmdbpass')"
       - "grant usage on *.* to 'slurm'@'localhost'"
       - "grant all privileges on slurm_acct_db.* to 'slurm'@'localhost'"
       - "flush privileges"
    become: yes
    become_method: sudo

############ Slurm setup ######

  - name: create storage directory
    command: bash -lc "mkdir /storage"
    ignore_errors: yes
    become: yes
    become_method: sudo


  - name: change to storage directory and git clone
    command: "git clone https://github.com/mknoxnv/ubuntu-slurm.git"
    args:
      chdir: /storage
    ignore_errors: yes
    become: yes
    become_method: sudo


  - name: start slurm installation process
    command: "{{ item }}"
    args:
      chdir: "/storage"
    with_items:

            #- "wget https://download.schedmd.com/slurm/{{ slurm_version }}.tar.bz2"
            #- "sudo tar xvjf {{ slurm_version }}.tar.bz2"
       - "wget http://10.130.166.180:8081/artifactory/slurm_amd_plgn_package/amd-plugin-mike-wip-v1.tar.gz"
       - "tar xvzf amd-plugin-mike-wip-v1.tar.gz"
    become: yes
    become_method: sudo


  - name: building slurm
    command: "{{ item }}"
    args:
      chdir: "/storage/{{ slurm_version }}"
    with_items:
       - "make clean"
       - "./configure --prefix=/tmp/slurm-build --sysconfdir=/etc/slurm --enable-pam --with-pam_dir=/lib/x86_64-linux-gnu/security/ --without-shared-libslurm --with-rsmi"
       - "make"
       - "make contrib"
       - "make install"
    become: yes
    become_method: sudo


  - name: install fpm
    command: bash -lc "gem install fpm"
    become: yes
    become_method: sudo


  - name: slurm initialization
    command: "{{ item }}"
    args:
      chdir: "/storage"
    with_items:
       - "fpm -s dir -t deb -v 1.0 -n {{ slurm_version }} --prefix=/usr -C /tmp/slurm-build ."
       - "dpkg -i {{ slurm_version }}_1.0_amd64.deb"
       - "mkdir /etc/slurm"
    become: yes
    become_method: sudo


  - name: Add slurm user and group
    command: "{{ item }}"
    with_items:
       - "groupadd -g 992 slurm"
       - "useradd slurm --gid 992 --uid 995"
    ignore_errors: yes
    become: yes
    become_method: sudo

  - name: slurm initialization
    command: "{{ item }}"
    args:
      chdir: "/storage"
    with_items:
       - "mkdir -p /etc/slurm /etc/slurm/prolog.d /etc/slurm/epilog.d /var/spool/slurm/ctld /var/spool/slurm/d /var/log/slurm"
       - "chown slurm /var/spool/slurm/ctld /var/spool/slurm/d /var/log/slurm"
    become: yes
    become_method: sudo

  - name: slurm initialization
    command: "{{ item }}"
    with_items:
       - "cp /storage/ubuntu-slurm/slurmdbd.service /etc/systemd/system/"
       - "cp /storage/ubuntu-slurm/slurmctld.service /etc/systemd/system/"
       - "cp /storage/ubuntu-slurm/slurm.conf /etc/slurm/"
       - "cp /storage/ubuntu-slurm/slurmdbd.conf /etc/slurm/"
       - "cp /storage/ubuntu-slurm/gres.conf /etc/slurm/gres.conf"
       - "cp /storage/ubuntu-slurm/cgroup.conf /etc/slurm/cgroup.conf"
       - "cp /storage/ubuntu-slurm/cgroup_allowed_devices_file.conf /etc/slurm/cgroup_allowed_devices_file.conf"
    become: yes
    become_method: sudo

  - name: reload_daemon
    systemd:
      daemon_reload: yes
    become: yes
    become_method: sudo

  - name: enable service slurmdbd
    systemd:
      name: slurmdbd
      enabled: yes
    become: yes
    become_method: sudo

  - name: start service slurmdbd
    systemd:
      state: started
      name: slurmdbd
    become: yes
    become_method: sudo

  - name: enable service slurmctld
    systemd:
      name: slurmctld
      enabled: yes
    become: yes
    become_method: sudo

  - name: slurm initialization
    command: "{{ item }}"
    with_items:
       - "sacctmgr add cluster compute-cluster"
       - "sacctmgr add account compute-account description='Compute accounts' Organization=OurOrg"
       - "sacctmgr create user myuser account=compute-account adminlevel=None"
    become: yes
    become_method: sudo

  - name: Adding configuration
    lineinfile:
      dest: /etc/slurm/slurm.conf
      state: present
      regexp: '^ControlMachine='
      line: 'ControlMachine=slurm-master'
    become: yes
    become_method: sudo

  - name: Adding configuration
    lineinfile:
      dest: /etc/slurm/slurm.conf
      state: present
      regexp: '^SelectType=select/cons_res'
      line: 'SelectType=select/linear'
    become: yes
    become_method: sudo

  - name: Adding configuration
    lineinfile:
      dest: /etc/slurm/slurm.conf
      state: present
      regexp: '^SelectTypeParameters=CR_Core_Memory,CR_CORE_DEFAULT_DIST_BLOCK,CR_ONE_TASK_PER_CORE'
      line: 'SelectTypeParameters=CR_CORE_DEFAULT_DIST_BLOCK,CR_ONE_TASK_PER_CORE'
    become: yes
    become_method: sudo

  - name: Adding configuration
    lineinfile:
      dest: /etc/slurm/slurm.conf
      state: present
      regexp: '^FastSchedule=1'
      line: 'FastSchedule=2'
    become: yes
    become_method: sudo

  - name: start service slurmctld
    systemd:
      name: slurmctld
      state: started
    become: yes
    become_method: sudo
